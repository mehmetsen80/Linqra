name: Linqra CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write

jobs:
  java-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      
      # Upload Java artifacts
      - name: Upload Java artifacts
        uses: actions/upload-artifact@v4
        with:
          name: java-artifacts
          path: api-gateway/target/*.jar

  react-build:
    needs: java-build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./edge-service

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21.5.0'
          npm: '10.8.1'
          cache: 'npm'
          cache-dependency-path: './edge-service/package-lock.json'

      - name: Remove package-lock.json
        run: rm -f package-lock.json

      - name: Install dependencies
        run: npm install --legacy-peer-deps
        continue-on-error: true

      - name: Build React app
        run: npm run build
        env:
          CI: false

      - name: Run tests
        run: npm test
        env:
          CI: false

      # Upload React build
      - name: Upload React build
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: edge-service/dist

  deploy:
    needs: [java-build, react-build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'  # Only deploy on master branch

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY_PROD }}

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.HOST_DNS_PROD }}
          EC2_USERNAME: ${{ secrets.USERNAME_PROD }}
          TARGET_DIR: ${{ secrets.TARGET_DIR_PROD }}
        run: |
          # Disable strict host key checking
          mkdir -p ~/.ssh
          echo "StrictHostKeyChecking no" >> ~/.ssh/config

          # Debug: Check artifacts directory content
          echo "Checking local artifacts directory:"
          ls -la artifacts/
          echo "Checking java-artifacts directory:"
          ls -la artifacts/java-artifacts/
          echo "Checking react-build directory:"
          ls -la artifacts/react-build/

          # Create and verify temp directory
          ssh $EC2_USERNAME@$EC2_HOST '
            rm -rf ~/deploy_temp
            mkdir -p ~/deploy_temp
            echo "Temporary directory ready"
          '
          
          echo "Starting file copy..."
          
          # Copy Java artifacts with verbose flag
          scp -v artifacts/java-artifacts/*.jar $EC2_USERNAME@$EC2_HOST:~/deploy_temp/
          echo "Java artifacts copied"
          
          # Copy React build with verbose flag
          scp -v -r artifacts/react-build/* $EC2_USERNAME@$EC2_HOST:~/deploy_temp/
          echo "React build copied"

          # Rest of the deployment
          ssh $EC2_USERNAME@$EC2_HOST '
            echo "Checking deploy_temp contents:"
            ls -la ~/deploy_temp/
            
            echo "Moving files to target directories..."
            sudo cp ~/deploy_temp/*.jar $TARGET_DIR/api-gateway/
            sudo chown -R ubuntu:ubuntu $TARGET_DIR/api-gateway/*.jar
            
            sudo cp -r ~/deploy_temp/* $TARGET_DIR/edge-service/
            sudo chown -R ubuntu:ubuntu $TARGET_DIR/edge-service/

            rm -rf ~/deploy_temp

            echo "Restarting services..."
            sudo systemctl restart api-gateway
            sudo nginx -t && sudo systemctl restart nginx
            
            echo "Deployment completed"
          '

  dependency-review:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high 